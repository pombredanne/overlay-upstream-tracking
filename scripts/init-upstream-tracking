#!python

#    overlay-upstream-tracking: a Gentoo overlay maintenance toolkit
#    Copyright (C) 2013  Gregory M. Turner <gmt@be-evil.net>
#
#    This program is free software; you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation; either version 2 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program; if not, write to the Free Software
#    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

import argparse

from dulwich.errors import NotGitRepository
from OverlayUpstreamTracking.Repo import Repo, NoSuchPathError
from os import getcwd
from sys import exit, stderr

parser = argparse.ArgumentParser(description='Tool to initialize git repositories for use with the overlay-upstream-tracking framework.',prog='init-upstream-tracking')

parser.add_argument('-o', '--overlay',  action='store', dest='overlaydir', metavar='OVERLAY-REPOSITORY-GIT-URL', help='overlay git repository url or file location (default: the git repository of the current working directory)', default=None)

args = vars(parser.parse_args())

try:
	theOR = Repo(args['overlaydir'])
except (NotARepository, NoSuchPathError, InvalidOverlayRepositoryError) as e:
	if args['overlaydir'] == None:
		stderr.write('The current working directory "' + getcwd() + '" does not\n')
		stderr.write('appear to belong to a valid git overlay.  Either change it\n')
		stderr.write('so that it does, or supply one with the --overlay argument.\n')
	else:
		stderr.write('The requested location "' + args['overlaydir'] + '" does not\n')
		stderr.write('appear to contain a valid git overlay.  Unable to proceed.\n')
	stderr.write('\n')
	parser.print_help()
	stderr.write('\n')
	exit('Valid git repository not specified or detected: %s' % e)

print('Overlay Directory == "' + theOR.overlay_root + '"')
